[
  {
    "description": "",
    "tags": [
      {
        "title": "license",
        "description": "Copyright Akveo. All Rights Reserved.\nLicensed under the MIT License. See License.txt in the project root for license information.",
        "lineNumber": 1
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 5,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 39
        }
      },
      "file": "/Users/alexei/dev/react-native-ui-kitten/src/components/button/rkButton.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "license": "Copyright Akveo. All Rights Reserved.\nLicensed under the MIT License. See License.txt in the project root for license information.",
    "name": "Component",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Component"
      }
    ],
    "namespace": "Component"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "inlineCode",
              "value": "RkButton",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is a basic button component.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This is full description for ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 41
                },
                "end": {
                  "line": 3,
                  "column": 30,
                  "offset": 70
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "RkButton",
              "position": {
                "start": {
                  "line": 3,
                  "column": 30,
                  "offset": 70
                },
                "end": {
                  "line": 3,
                  "column": 40,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 41
            },
            "end": {
              "line": 3,
              "column": 40,
              "offset": 80
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 40,
          "offset": 80
        }
      }
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 5,
        "type": null,
        "name": "RkComponent"
      },
      {
        "title": "example",
        "description": "Usage example\n\n```\nimport {RkButton} from 'react-native-ui-kitten';\n\n //...\n\n <RkButton>Click</RkButton>\n```",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "Usage with Icons\n\nYou can put text or/and icon inside of `RkButton`. Example of button with icon usage:\n\n```\nimport {RkButton} from 'react-native-ui-kitten';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\n//...\n\n<RkButton rkType='small outline'>\n<Icon style={{marginRight: 5, fontSize: 18}} name={'logo-github'}/> Star\n</RkButton>*\n```",
        "lineNumber": 18
      },
      {
        "title": "example",
        "description": "Create custom rkType\n\nTo define new `rkType` you can use predefined properties which will passed to according element inside components:\n\n```\nimport {RkTheme} from 'react-native-ui-kitten';\n\nRkTheme.setType('RkButton', 'dark', {\n backgroundColor: 'gray',\n borderRadius: 10,\n});\n\nRkTheme.setType('RkButton', 'icon', {\n fontSize: 24,\n width: 46,\n borderRadius: 25\n});\n```\n\nNow you can use *dark* and *icon* types in you app:\n\n```\nimport {RkButton} from 'react-native-ui-kitten';\n\n//...\n\n<RkButton rkType='dark'>SUBMIT</RkButton>\n\n<RkButton rkType='dark icon' style={{marginLeft: 20}}>\n<Icon name=\"md-heart\"/>\n</RkButton>\n\n```",
        "lineNumber": 33
      },
      {
        "title": "example",
        "description": "Advanced Styling\n\nIt's also possible to implement more detailed styling. `RkButton` consists from couple of base react component.\nYou can easily set styles for each component.\n\nFor example you can change the opacity of content passed to `RkButton`:\n\n```\nimport {RkTheme} from 'react-native-ui-kitten';\n\nRkTheme.setType('RkButton', 'faded', {\n  content: {\n    opacity: 0.6,\n  }\n});\n```",
        "lineNumber": 67
      },
      {
        "title": "example",
        "description": "Inline styling\n\nIt's possible to set styles inline. Use props `style` for `container` component and `contentStyle` for `content` component.\n\n```\nimport {RkButton} from 'react-native-ui-kitten';\n\n//...\n\n<RkButton\nstyle={{backgroundColor: 'red'}}\ncontentStyle={{color: 'white'}}> Hello </RkButton>\n```",
        "lineNumber": 84
      },
      {
        "title": "styles",
        "description": "Available properties\n- `color` : Color of content of `RkButton`. Usually text or icon.\n- `backgroundColor` : Background color of `RkButton`.\n- `borderWidth` : Width of outer border.\n- `borderRadius` : Border radius of `RkButton`.\n- `borderColor` : Color of border.\n- `fontSize` : Size of content inside. Applied only for first level children of `RkButton`.\n- `width` : Width of `RkButton`.\n- `height` : Height of `RkButton`.\n\n * @styles Available components\n- `container` : `TouchableOpacity` - container of `RkButton`.\n- `content` : If you use plain text then `RkText`. If you insert children - then style will be applied to all children on first level.",
        "lineNumber": 98
      },
      {
        "title": "required",
        "description": null,
        "lineNumber": 112
      },
      {
        "title": "property",
        "description": "Types for stylization component\nBy default RkButton supports following types: primary, info, warning, danger, success, outline, rounded,\ncircle, small, medium, large, xlarge, clear",
        "lineNumber": 113,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "rkType"
      },
      {
        "title": "property",
        "description": "Style for button container",
        "lineNumber": 117,
        "type": {
          "type": "NameExpression",
          "name": "TouchableOpacity.style"
        },
        "name": "style"
      },
      {
        "title": "platform",
        "description": "ios",
        "lineNumber": 119
      },
      {
        "title": "property",
        "description": "Style for each button's children",
        "lineNumber": 120,
        "type": {
          "type": "NameExpression",
          "name": "style"
        },
        "name": "contentStyle"
      },
      {
        "title": "property",
        "description": "Called when the touch is released, but not if cancelled.",
        "lineNumber": 122,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "onPress"
      },
      {
        "title": "property",
        "description": "Called when the touch is released, but not if cancelled.",
        "lineNumber": 123,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "onPressIn"
      },
      {
        "title": "property",
        "description": "Called when the touch is released, but not if cancelled.",
        "lineNumber": 124,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "onPressOut"
      },
      {
        "title": "property",
        "description": "Called when the touch is released and is longer than usual press, but not if cancelled.",
        "lineNumber": 125,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "onLongPress"
      }
    ],
    "loc": {
      "start": {
        "line": 17,
        "column": 0
      },
      "end": {
        "line": 145,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 146,
          "column": 0
        },
        "end": {
          "line": 202,
          "column": 1
        }
      },
      "file": "/Users/alexei/dev/react-native-ui-kitten/src/components/button/rkButton.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 5,
        "type": null,
        "name": "RkComponent"
      }
    ],
    "examples": [
      {
        "description": "Usage example\n\n```\nimport {RkButton} from 'react-native-ui-kitten';\n\n //...\n\n <RkButton>Click</RkButton>\n```"
      },
      {
        "description": "Usage with Icons\n\nYou can put text or/and icon inside of `RkButton`. Example of button with icon usage:\n\n```\nimport {RkButton} from 'react-native-ui-kitten';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\n//...\n\n<RkButton rkType='small outline'>\n<Icon style={{marginRight: 5, fontSize: 18}} name={'logo-github'}/> Star\n</RkButton>*\n```"
      },
      {
        "description": "Create custom rkType\n\nTo define new `rkType` you can use predefined properties which will passed to according element inside components:\n\n```\nimport {RkTheme} from 'react-native-ui-kitten';\n\nRkTheme.setType('RkButton', 'dark', {\n backgroundColor: 'gray',\n borderRadius: 10,\n});\n\nRkTheme.setType('RkButton', 'icon', {\n fontSize: 24,\n width: 46,\n borderRadius: 25\n});\n```\n\nNow you can use *dark* and *icon* types in you app:\n\n```\nimport {RkButton} from 'react-native-ui-kitten';\n\n//...\n\n<RkButton rkType='dark'>SUBMIT</RkButton>\n\n<RkButton rkType='dark icon' style={{marginLeft: 20}}>\n<Icon name=\"md-heart\"/>\n</RkButton>\n\n```"
      },
      {
        "description": "Advanced Styling\n\nIt's also possible to implement more detailed styling. `RkButton` consists from couple of base react component.\nYou can easily set styles for each component.\n\nFor example you can change the opacity of content passed to `RkButton`:\n\n```\nimport {RkTheme} from 'react-native-ui-kitten';\n\nRkTheme.setType('RkButton', 'faded', {\n  content: {\n    opacity: 0.6,\n  }\n});\n```"
      },
      {
        "description": "Inline styling\n\nIt's possible to set styles inline. Use props `style` for `container` component and `contentStyle` for `content` component.\n\n```\nimport {RkButton} from 'react-native-ui-kitten';\n\n//...\n\n<RkButton\nstyle={{backgroundColor: 'red'}}\ncontentStyle={{color: 'white'}}> Hello </RkButton>\n```"
      }
    ],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "rkType",
        "lineNumber": 113,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Types for stylization component\nBy default RkButton supports following types: primary, info, warning, danger, success, outline, rounded,\ncircle, small, medium, large, xlarge, clear",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 3,
                      "column": 44,
                      "offset": 180
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 44,
                  "offset": 180
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 44,
              "offset": 180
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "style",
        "lineNumber": 117,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Style for button container",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "TouchableOpacity.style"
        }
      },
      {
        "title": "property",
        "name": "contentStyle",
        "lineNumber": 120,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Style for each button's children",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "style"
        }
      },
      {
        "title": "property",
        "name": "onPress",
        "lineNumber": 122,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Called when the touch is released, but not if cancelled.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      },
      {
        "title": "property",
        "name": "onPressIn",
        "lineNumber": 123,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Called when the touch is released, but not if cancelled.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      },
      {
        "title": "property",
        "name": "onPressOut",
        "lineNumber": 124,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Called when the touch is released, but not if cancelled.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      },
      {
        "title": "property",
        "name": "onLongPress",
        "lineNumber": 125,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Called when the touch is released and is longer than usual press, but not if cancelled.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 88,
                      "offset": 87
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "RkButton",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "RkButton",
        "kind": "class"
      }
    ],
    "namespace": "RkButton"
  }
]